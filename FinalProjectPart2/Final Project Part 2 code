#Name: Parth Patel, PSID: 1837355

import csv
from datetime import datetime

if __name__ == '__main__':
    items = {}
    files = ['ManufacturerList.csv', 'PriceList.csv', 'ServiceDatesList.csv']
    for file in files:
        with open(file, 'r') as csv_file:
            csv_reader = csv.reader(csv_file, delimiter=',')
            for line in csv_reader:
                item_id = line[0]
                if file == files[0]:
                    items[item_id] = {}
                    manf_name = line[1]
                    item_type = line[2]
                    damaged = line[3]
                    items[item_id]['manufacturer'] = manf_name.strip()
                    items[item_id]['item_type'] = item_type.strip()
                    items[item_id]['damaged'] = damaged
                elif file == files[1]:
                    price = line[1]
                    items[item_id]['price'] = price
                elif file == files[2]:
                    service_date = line[1]
                    items[item_id]['service_date'] = service_date

    # Get the different manufacturers and types in a list
    types = []
    manufacturers = []
    for item in items:
        chkd_manufacturer = items[item]['manufacturer']
        chkd_type = items[item]['item_type']
        if chkd_manufacturer not in manufacturers:
            manufacturers.append(chkd_manufacturer)
        if chkd_type not in types:
            types.append(chkd_type)

    # Prompt the user for input
    user_input = None
    while user_input != 'q':
        user_input = input("\nPlease enter an item manufacturer and item type or enter 'q' to quit:\n")
        if user_input == 'q':
            break
        else:
            # Check each word from user to see if there is a match in manufacturer and item type
            slted_manufacturer = None
            slted_type = None
            user_input = user_input.split()
            bad_input = False
            for word in user_input:
                if word in manufacturers:
                    if slted_manufacturer:
                        # Should only have one submitted manufacturer
                        bad_input = True
                    else:
                        slted_manufacturer = word
                elif word in types:
                    if slted_type:
                        # Should only have one submitted type
                        bad_input = True
                    else:
                        slted_type = word
            if not slted_manufacturer or not slted_type or bad_input:
                print("No such item in inventory")

            else:
                # Ordered list of keys to iterate through based on highest price first
                keys = sorted(items.keys(), key=lambda x: items[x]['price'], reverse=True)

                # Get the matching list of items based on user input
                matching_items = []

                # Store items with same type but different manufacturer
                # - item type must match
                # - item must be in inventory and not damaged or past service
                similar_items = {}
                for item in keys:
                    if items[item]['item_type'] == slted_type:
                        # Don't add damaged items or past service to matched list or similar list
                        today = datetime.now().date()
                        service_date = items[item]['service_date']
                        service_expiration = datetime.strptime(service_date, "%m/%d/%Y").date()
                        expired = service_expiration < today
                        if items[item]['manufacturer'] == slted_manufacturer:
                            if not expired and not items[item]['damaged']:
                                matching_items.append((item, items[item]))
                        else:
                            if not expired and not items[item]['damaged']:
                                similar_items[item] = items[item]

                # Output the item if matched
                if matching_items:
                    item = matching_items[0]
                    item_id = item[0]
                    manf_name = item[1]['manufacturer']
                    item_type = item[1]['item_type']
                    price = item[1]['price']
                    print("Your item is: {}, {}, {}, {}\n".format(item_id, manf_name, item_type, price))

                    # Output item from different manufacturer that is closest in price to matched item
                    if similar_items:
                        matched_price = price
                        # Get the similar item with the closest price to the initial item
                        close_item = None
                        close_price_dif = None
                        for item in similar_items:
                            if close_price_dif == None:
                                close_item = similar_items[item]
                                close_price_dif = abs(int(matched_price) - int(similar_items[item]['price']))
                                item_id = item
                                manf_name = similar_items[item]['manufacturer']
                                item_type = similar_items[item]['item_type']
                                price = similar_items[item]['price']
                                continue
                            price_diff = abs(int(matched_price) - int(similar_items[item]['price']))
                            if price_diff < close_price_dif:
                                close_item = item
                                close_price_dif = price_diff
                                item_id = item
                                manf_name = similar_items[item]['manufacturer']
                                item_type = similar_items[item]['item_type']
                                price = similar_items[item]['price']
                                print("You may, also, consider: {}, {}, {}, {}\n".format(item_id, manf_name, item_type,
                                                                                         price))

                else:
                    print("No similar item in inventory")
